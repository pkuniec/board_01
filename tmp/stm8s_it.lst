                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_it
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _sec
                                     12 	.globl _tim4_update
                                     13 	.globl _uart1_tx
                                     14 	.globl _uart1_rx
                                     15 	.globl _exti2_irq
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area DATA
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area INITIALIZED
      000000                         24 _sec::
      000000                         25 	.ds 1
                                     26 ;--------------------------------------------------------
                                     27 ; absolute external ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area DABS (ABS)
                                     30 
                                     31 ; default segment ordering for linker
                                     32 	.area HOME
                                     33 	.area GSINIT
                                     34 	.area GSFINAL
                                     35 	.area CONST
                                     36 	.area INITIALIZER
                                     37 	.area CODE
                                     38 
                                     39 ;--------------------------------------------------------
                                     40 ; global & static initialisations
                                     41 ;--------------------------------------------------------
                                     42 	.area HOME
                                     43 	.area GSINIT
                                     44 	.area GSFINAL
                                     45 	.area GSINIT
                                     46 ;--------------------------------------------------------
                                     47 ; Home
                                     48 ;--------------------------------------------------------
                                     49 	.area HOME
                                     50 	.area HOME
                                     51 ;--------------------------------------------------------
                                     52 ; code
                                     53 ;--------------------------------------------------------
                                     54 	.area CODE
                                     55 ;	src/stm8s_it.c: 10: void tim4_update(void) __interrupt (IT_TIM4_OVR_UIF) {
                                     56 ; genLabel
                                     57 ;	-----------------------------------------
                                     58 ;	 function tim4_update
                                     59 ;	-----------------------------------------
                                     60 ;	Register assignment is optimal.
                                     61 ;	Stack space usage: 0 bytes.
      000000                         62 _tim4_update:
                                     63 ;	src/stm8s_it.c: 13: TIM4->SR1 &= ~TIM4_SR1_UIF;
                                     64 ; genPointerGet
      000000 C6 53 44         [ 1]   65 	ld	a, 0x5344
                                     66 ; genAnd
      000003 A4 FE            [ 1]   67 	and	a, #0xfe
                                     68 ; genPointerSet
      000005 C7 53 44         [ 1]   69 	ld	0x5344, a
                                     70 ;	src/stm8s_it.c: 15: if ( !sec-- ) {
                                     71 ; genAssign
      000008 C6u00u00         [ 1]   72 	ld	a, _sec+0
                                     73 ; genMinus
      00000B 72 5Au00u00      [ 1]   74 	dec	_sec+0
                                     75 ; genIfx
      00000F 4D               [ 1]   76 	tnz	a
      000010 27 03            [ 1]   77 	jreq	00110$
      000012 CCr00r19         [ 2]   78 	jp	00103$
      000015                         79 00110$:
                                     80 ;	src/stm8s_it.c: 16: sec = 100;
                                     81 ; genAssign
      000015 35 64u00u00      [ 1]   82 	mov	_sec+0, #0x64
                                     83 ; genLabel
      000019                         84 00103$:
                                     85 ;	src/stm8s_it.c: 18: }
                                     86 ; genEndFunction
      000019 80               [11]   87 	iret
                                     88 ;	src/stm8s_it.c: 21: void uart1_tx(void) __interrupt (IT_UART1_TX) {
                                     89 ; genLabel
                                     90 ;	-----------------------------------------
                                     91 ;	 function uart1_tx
                                     92 ;	-----------------------------------------
                                     93 ;	Register assignment might be sub-optimal.
                                     94 ;	Stack space usage: 3 bytes.
      00001A                         95 _uart1_tx:
      00001A 52 03            [ 2]   96 	sub	sp, #3
                                     97 ;	src/stm8s_it.c: 22: uint8_t sr_reg = UART1->SR;
                                     98 ; genPointerGet
      00001C C6 52 30         [ 1]   99 	ld	a, 0x5230
      00001F 6B 01            [ 1]  100 	ld	(0x01, sp), a
                                    101 ;	src/stm8s_it.c: 24: if ( uart_tx_Buff.head == uart_tx_Buff.tail ) {
                                    102 ; skipping iCode since result will be rematerialized
                                    103 ; genPointerGet
      000021 C6u00u02         [ 1]  104 	ld	a, _uart_tx_Buff+2
      000024 6B 03            [ 1]  105 	ld	(0x03, sp), a
                                    106 ; skipping iCode since result will be rematerialized
                                    107 ; genPointerGet
      000026 C6u00u03         [ 1]  108 	ld	a, _uart_tx_Buff+3
                                    109 ; genCmpEQorNE
      000029 11 03            [ 1]  110 	cp	a, (0x03, sp)
      00002B 26 03            [ 1]  111 	jrne	00133$
      00002D CCr00r33         [ 2]  112 	jp	00134$
      000030                        113 00133$:
      000030 CCr00r46         [ 2]  114 	jp	00106$
      000033                        115 00134$:
                                    116 ; skipping generated iCode
                                    117 ;	src/stm8s_it.c: 26: UART1->CR2 |= UART1_CR2_REN;
                                    118 ; genPointerGet
      000033 C6 52 35         [ 1]  119 	ld	a, 0x5235
                                    120 ; genOr
      000036 AA 04            [ 1]  121 	or	a, #0x04
                                    122 ; genPointerSet
      000038 C7 52 35         [ 1]  123 	ld	0x5235, a
                                    124 ;	src/stm8s_it.c: 28: UART1->CR2 &= ~(UART1_CR2_TIEN | UART1_CR2_TCIEN);
                                    125 ; genPointerGet
      00003B C6 52 35         [ 1]  126 	ld	a, 0x5235
                                    127 ; genAnd
      00003E A4 3F            [ 1]  128 	and	a, #0x3f
                                    129 ; genPointerSet
      000040 C7 52 35         [ 1]  130 	ld	0x5235, a
                                    131 ; genGoto
      000043 CCr00r75         [ 2]  132 	jp	00107$
                                    133 ; genLabel
      000046                        134 00106$:
                                    135 ;	src/stm8s_it.c: 31: if ( sr_reg & UART1_SR_TXE ) {
                                    136 ; genAnd
      000046 0D 01            [ 1]  137 	tnz	(0x01, sp)
      000048 2B 03            [ 1]  138 	jrmi	00135$
      00004A CCr00r75         [ 2]  139 	jp	00107$
      00004D                        140 00135$:
                                    141 ; skipping generated iCode
                                    142 ;	src/stm8s_it.c: 33: uart_tx_Buff.tail++;
                                    143 ; genAddrOf
      00004D AEr00r03         [ 2]  144 	ldw	x, #_uart_tx_Buff+3
                                    145 ; genPointerGet
      000050 F6               [ 1]  146 	ld	a, (x)
                                    147 ; genPlus
      000051 4C               [ 1]  148 	inc	a
                                    149 ; genPointerSet
      000052 F7               [ 1]  150 	ld	(x), a
                                    151 ;	src/stm8s_it.c: 34: if (uart_tx_Buff.tail == TX_BUFF_SIZE) {
                                    152 ; skipping iCode since result will be rematerialized
                                    153 ; genPointerGet
      000053 C6u00u03         [ 1]  154 	ld	a, _uart_tx_Buff+3
                                    155 ; genCmpEQorNE
      000056 A1 08            [ 1]  156 	cp	a, #0x08
      000058 26 03            [ 1]  157 	jrne	00137$
      00005A CCr00r60         [ 2]  158 	jp	00138$
      00005D                        159 00137$:
      00005D CCr00r64         [ 2]  160 	jp	00102$
      000060                        161 00138$:
                                    162 ; skipping generated iCode
                                    163 ;	src/stm8s_it.c: 35: uart_tx_Buff.tail = 0;
                                    164 ; skipping iCode since result will be rematerialized
                                    165 ; genPointerSet
      000060 35 00u00u03      [ 1]  166 	mov	_uart_tx_Buff+3, #0x00
                                    167 ; genLabel
      000064                        168 00102$:
                                    169 ;	src/stm8s_it.c: 38: UART1->DR = uart_tx_Buff.buffer[uart_tx_Buff.tail];
                                    170 ; skipping iCode since result will be rematerialized
                                    171 ; genPointerGet
      000064 CEu00u00         [ 2]  172 	ldw	x, _uart_tx_Buff+0
      000067 1F 02            [ 2]  173 	ldw	(0x02, sp), x
                                    174 ; skipping iCode since result will be rematerialized
                                    175 ; genPointerGet
      000069 C6u00u03         [ 1]  176 	ld	a, _uart_tx_Buff+3
                                    177 ; genPlus
      00006C 5F               [ 1]  178 	clrw	x
      00006D 97               [ 1]  179 	ld	xl, a
      00006E 72 FB 02         [ 2]  180 	addw	x, (0x02, sp)
                                    181 ; genPointerGet
      000071 F6               [ 1]  182 	ld	a, (x)
                                    183 ; genPointerSet
      000072 C7 52 31         [ 1]  184 	ld	0x5231, a
                                    185 ; genLabel
      000075                        186 00107$:
                                    187 ;	src/stm8s_it.c: 42: if ( sr_reg & UART1_SR_TC ) {
                                    188 ; genAnd
      000075 7B 01            [ 1]  189 	ld	a, (0x01, sp)
      000077 A5 40            [ 1]  190 	bcp	a, #0x40
      000079 26 03            [ 1]  191 	jrne	00139$
      00007B CCr00r86         [ 2]  192 	jp	00110$
      00007E                        193 00139$:
                                    194 ; skipping generated iCode
                                    195 ;	src/stm8s_it.c: 44: UART1->SR &= ~(UART1_SR_TC);
                                    196 ; genPointerGet
      00007E C6 52 30         [ 1]  197 	ld	a, 0x5230
                                    198 ; genAnd
      000081 A4 BF            [ 1]  199 	and	a, #0xbf
                                    200 ; genPointerSet
      000083 C7 52 30         [ 1]  201 	ld	0x5230, a
                                    202 ; genLabel
      000086                        203 00110$:
                                    204 ;	src/stm8s_it.c: 46: }
                                    205 ; genEndFunction
      000086 5B 03            [ 2]  206 	addw	sp, #3
      000088 80               [11]  207 	iret
                                    208 ;	src/stm8s_it.c: 49: void uart1_rx(void) __interrupt (IT_UART1_RX) {
                                    209 ; genLabel
                                    210 ;	-----------------------------------------
                                    211 ;	 function uart1_rx
                                    212 ;	-----------------------------------------
                                    213 ;	Register assignment might be sub-optimal.
                                    214 ;	Stack space usage: 1 bytes.
      000089                        215 _uart1_rx:
      000089 88               [ 1]  216 	push	a
                                    217 ;	src/stm8s_it.c: 50: if ( UART1->SR & UART1_SR_RXNE ) {
                                    218 ; genPointerGet
      00008A C6 52 30         [ 1]  219 	ld	a, 0x5230
                                    220 ; genAnd
      00008D A5 20            [ 1]  221 	bcp	a, #0x20
      00008F 26 03            [ 1]  222 	jrne	00125$
      000091 CCr00rD5         [ 2]  223 	jp	00108$
      000094                        224 00125$:
                                    225 ; skipping generated iCode
                                    226 ;	src/stm8s_it.c: 51: uint8_t head_temp = uart_rx_Buff.head + 1;
                                    227 ; skipping iCode since result will be rematerialized
                                    228 ; genPointerGet
      000094 C6u00u02         [ 1]  229 	ld	a, _uart_rx_Buff+2
                                    230 ; genCast
                                    231 ; genAssign
                                    232 ; genPlus
      000097 4C               [ 1]  233 	inc	a
      000098 6B 01            [ 1]  234 	ld	(0x01, sp), a
                                    235 ;	src/stm8s_it.c: 53: if ( head_temp == RX_BUFF_SIZE ) {
                                    236 ; genCmpEQorNE
      00009A 7B 01            [ 1]  237 	ld	a, (0x01, sp)
      00009C A1 08            [ 1]  238 	cp	a, #0x08
      00009E 26 03            [ 1]  239 	jrne	00127$
      0000A0 CCr00rA6         [ 2]  240 	jp	00128$
      0000A3                        241 00127$:
      0000A3 CCr00rA8         [ 2]  242 	jp	00102$
      0000A6                        243 00128$:
                                    244 ; skipping generated iCode
                                    245 ;	src/stm8s_it.c: 54: head_temp = 0;
                                    246 ; genAssign
      0000A6 0F 01            [ 1]  247 	clr	(0x01, sp)
                                    248 ; genLabel
      0000A8                        249 00102$:
                                    250 ;	src/stm8s_it.c: 57: if ( head_temp == uart_rx_Buff.tail ) {
                                    251 ; skipping iCode since result will be rematerialized
                                    252 ; genPointerGet
      0000A8 C6u00u03         [ 1]  253 	ld	a, _uart_rx_Buff+3
                                    254 ; genCmpEQorNE
      0000AB 11 01            [ 1]  255 	cp	a, (0x01, sp)
      0000AD 26 03            [ 1]  256 	jrne	00130$
      0000AF CCr00rB5         [ 2]  257 	jp	00131$
      0000B2                        258 00130$:
      0000B2 CCr00rC0         [ 2]  259 	jp	00104$
      0000B5                        260 00131$:
                                    261 ; skipping generated iCode
                                    262 ;	src/stm8s_it.c: 59: UART1->SR &= ~UART1_SR_RXNE;
                                    263 ; genPointerGet
      0000B5 C6 52 30         [ 1]  264 	ld	a, 0x5230
                                    265 ; genAnd
      0000B8 A4 DF            [ 1]  266 	and	a, #0xdf
                                    267 ; genPointerSet
      0000BA C7 52 30         [ 1]  268 	ld	0x5230, a
                                    269 ; genGoto
      0000BD CCr00rD5         [ 2]  270 	jp	00108$
                                    271 ; genLabel
      0000C0                        272 00104$:
                                    273 ;	src/stm8s_it.c: 61: uart_rx_Buff.buffer[head_temp] = UART1->DR;
                                    274 ; skipping iCode since result will be rematerialized
                                    275 ; genPointerGet
      0000C0 CEu00u00         [ 2]  276 	ldw	x, _uart_rx_Buff+0
                                    277 ; genPlus
      0000C3 9F               [ 1]  278 	ld	a, xl
      0000C4 1B 01            [ 1]  279 	add	a, (0x01, sp)
      0000C6 97               [ 1]  280 	ld	xl, a
      0000C7 9E               [ 1]  281 	ld	a, xh
      0000C8 A9 00            [ 1]  282 	adc	a, #0x00
      0000CA 95               [ 1]  283 	ld	xh, a
                                    284 ; genPointerGet
      0000CB C6 52 31         [ 1]  285 	ld	a, 0x5231
                                    286 ; genPointerSet
      0000CE F7               [ 1]  287 	ld	(x), a
                                    288 ;	src/stm8s_it.c: 62: uart_rx_Buff.head = head_temp;
                                    289 ; skipping iCode since result will be rematerialized
                                    290 ; genPointerSet
      0000CF AEr00r02         [ 2]  291 	ldw	x, #(_uart_rx_Buff + 2)
      0000D2 7B 01            [ 1]  292 	ld	a, (0x01, sp)
      0000D4 F7               [ 1]  293 	ld	(x), a
                                    294 ; genLabel
      0000D5                        295 00108$:
                                    296 ;	src/stm8s_it.c: 65: }
                                    297 ; genEndFunction
      0000D5 84               [ 1]  298 	pop	a
      0000D6 80               [11]  299 	iret
                                    300 ;	src/stm8s_it.c: 68: void exti2_irq(void) __interrupt (IT_EXTI2) {
                                    301 ; genLabel
                                    302 ;	-----------------------------------------
                                    303 ;	 function exti2_irq
                                    304 ;	-----------------------------------------
                                    305 ;	Register assignment is optimal.
                                    306 ;	Stack space usage: 0 bytes.
      0000D7                        307 _exti2_irq:
                                    308 ;	src/stm8s_it.c: 69: if( !(GPIOC->IDR & (PIN_3)) ) {
                                    309 ; genPointerGet
      0000D7 C6 50 0B         [ 1]  310 	ld	a, 0x500b
                                    311 ; genAnd
      0000DA A5 08            [ 1]  312 	bcp	a, #0x08
      0000DC 27 03            [ 1]  313 	jreq	00117$
      0000DE CCr00rE8         [ 2]  314 	jp	00102$
      0000E1                        315 00117$:
                                    316 ; skipping generated iCode
                                    317 ;	src/stm8s_it.c: 71: SetBit(system.flags, N_IRQ);
                                    318 ; genAddrOf
      0000E1 AEr00r00         [ 2]  319 	ldw	x, #_system+0
                                    320 ; genPointerGet
      0000E4 F6               [ 1]  321 	ld	a, (x)
                                    322 ; genOr
      0000E5 AA 02            [ 1]  323 	or	a, #0x02
                                    324 ; genPointerSet
      0000E7 F7               [ 1]  325 	ld	(x), a
                                    326 ; genLabel
      0000E8                        327 00102$:
                                    328 ;	src/stm8s_it.c: 74: if( !(GPIOC->IDR & (PIN_4)) ) {
                                    329 ; genPointerGet
      0000E8 C6 50 0B         [ 1]  330 	ld	a, 0x500b
                                    331 ; genAnd
      0000EB A5 10            [ 1]  332 	bcp	a, #0x10
      0000ED 27 03            [ 1]  333 	jreq	00118$
      0000EF CCr00rF9         [ 2]  334 	jp	00105$
      0000F2                        335 00118$:
                                    336 ; skipping generated iCode
                                    337 ;	src/stm8s_it.c: 76: SetBit(system.flags, E_IRQ);
                                    338 ; genAddrOf
      0000F2 AEr00r00         [ 2]  339 	ldw	x, #_system+0
                                    340 ; genPointerGet
      0000F5 F6               [ 1]  341 	ld	a, (x)
                                    342 ; genOr
      0000F6 AA 01            [ 1]  343 	or	a, #0x01
                                    344 ; genPointerSet
      0000F8 F7               [ 1]  345 	ld	(x), a
                                    346 ; genLabel
      0000F9                        347 00105$:
                                    348 ;	src/stm8s_it.c: 78: }
                                    349 ; genEndFunction
      0000F9 80               [11]  350 	iret
                                    351 	.area CODE
                                    352 	.area CONST
                                    353 	.area INITIALIZER
      000000                        354 __xinit__sec:
      000000 64                     355 	.db #0x64	; 100	'd'
                                    356 	.area CABS (ABS)
